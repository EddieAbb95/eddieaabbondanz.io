<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Voxel on Eddie Abbondanzio</title>
    <link>https://eddieabbondanz.io/categories/voxel/</link>
    <description>Recent content in Voxel on Eddie Abbondanzio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Sun, 25 Mar 2018 10:06:59 -0400</lastBuildDate><atom:link href="https://eddieabbondanz.io/categories/voxel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Greedy Meshing for Vertex Colored Voxels In Unity</title>
      <link>https://eddieabbondanz.io/post/voxel/greedy-mesh/</link>
      <pubDate>Sun, 25 Mar 2018 10:06:59 -0400</pubDate>
      
      <guid>https://eddieabbondanz.io/post/voxel/greedy-mesh/</guid>
      <description>TL;DR Full algorithm is at the bottom. Classes for Block, Chunk, and MeshData are defined below the intro.
This article goes over how to implement a greedy meshing algorithm for generating optimized meshes for vertex-colored voxels in Unity. The algorithm is derived from Robert O&amp;rsquo;Leary, with a few alterations made.
The setup has been simplified, and assumes the world is only comprised of a single chunk that holds all the blocks.</description>
    </item>
    
  </channel>
</rss>
